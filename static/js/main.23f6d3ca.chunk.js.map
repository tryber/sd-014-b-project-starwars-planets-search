{"version":3,"sources":["context/ContextPlanets.js","helper/helper.js","components/OrderData.js","components/UlFilter.js","components/Filter.js","components/Header.js","components/Table.js","services/serviceApi.js","context/Provider.js","App.js","index.js"],"names":["ContextPlanets","createContext","optionsComparison","optionsCollum","OrderData","useContext","setOption","setOrder","option","getFilterOrder","orderFilter","planetFiltered","filterColums","handleChange","value","target","verifyOrder","sort","a","b","Number","verifyCaseAsc","verifyCaseDesc","className","data-testid","onChange","map","title","index","key","htmlFor","type","id","name","onClick","UlFilter","filter","setFilters","setFilterColumns","data","setPlanetFiltered","filters","filterByName","filterByNumericValues","useEffect","length","filterData","column","comparison","obj","filterObj","filterOption","concat","handleClick","Filter","getFilterNumeric","setComparison","setColumn","filterComparison","setValue","filteredColums","Header","getPlanetName","dataFilter","planet","toLowerCase","includes","placeholder","Table","getDataApi","dataKeys","Object","keys","titles","rotation","rotation_period","orbital","orbital_period","diameter","climate","gravity","terrain","surface","surface_water","population","films","created","edited","url","JSON","stringify","fetchApi","fetch","fetchDataApi","json","responseJson","resultsJson","results","Provider","children","useState","setData","order","contextValue","inputName","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.23f6d3ca.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst ContextPlanets = createContext();\n\nexport default ContextPlanets;\n","const optionsCollum = ['population', 'orbital_period', 'diameter',\n  'rotation_period', 'surface_water'];\n\nexport const optionsComparison = ['maior que', 'menor que', 'igual a'];\n\nexport const removeOptionColumn = (array, value) => {\n  const indexOption = array.indexOf(value);\n  array.splice(indexOption, 1);\n};\n\nexport default optionsCollum;\n","import React, { useContext } from 'react';\nimport ContextPlanets from '../context/ContextPlanets';\n\nconst OrderData = () => {\n  const { setOption, setOrder, option, getFilterOrder,\n    orderFilter, planetFiltered } = useContext(ContextPlanets);\n  const { filterColums } = useContext(ContextPlanets);\n\n  const handleChange = ({ target: { value } }) => {\n    setOrder(value);\n  };\n\n  const handleChangeOption = ({ target: { value } }) => {\n    setOption(value);\n  };\n\n  const verifyCaseAsc = () => {\n    switch (orderFilter) {\n    case 'ASC':\n      if (option !== 'name' && option !== '') {\n        return planetFiltered.sort((a, b) => {\n          if (Number(a[option]) < Number(b[option])) {\n            const negative = -1;\n            return negative;\n          } return true;\n        });\n      } if (option === 'name' && option !== '') {\n        return planetFiltered.sort((a, b) => {\n          if (a[option] < b[option]) {\n            const negative = -1;\n            return negative;\n          } return true;\n        });\n      }\n      break;\n    default:\n      break;\n    }\n  };\n\n  const verifyCaseDesc = () => {\n    switch (orderFilter) {\n    case 'DESC':\n      if (option !== 'name' && option !== '') {\n        return planetFiltered.sort((a, b) => {\n          if (Number(a[option]) > Number(b[option])) {\n            const negative = -1;\n            return negative;\n          } return true;\n        });\n      } if (option === 'name' && option !== '') {\n        return planetFiltered.sort((a, b) => {\n          if (a[option] > b[option]) {\n            const negative = -1;\n            return negative;\n          } return true;\n        });\n      }\n      break;\n    default:\n      break;\n    }\n  };\n\n  const verifyOrder = () => {\n    verifyCaseAsc();\n    verifyCaseDesc();\n  };\n\n  const handleClick = () => {\n    getFilterOrder();\n    verifyOrder();\n  };\n\n  return (\n    <section className=\"section-orderData\">\n      <select\n        data-testid=\"column-sort\"\n        value={ option }\n        onChange={ handleChangeOption }\n        className=\"select-filter\"\n      >\n        <option>name</option>\n        { filterColums.map((title, index) => (\n          <option key={ index }>\n            {title}\n          </option>\n        ))}\n      </select>\n      <label\n        htmlFor=\"acendente\"\n        className=\"labelOrder\"\n      >\n        ASCENDENTE\n        <input\n          data-testid=\"column-sort-input-asc\"\n          type=\"radio\"\n          value=\"ASC\"\n          id=\"acendente\"\n          name=\"radio-order\"\n          onChange={ handleChange }\n          className=\"radio-order\"\n        />\n      </label>\n      <label\n        htmlFor=\"descendente\"\n        className=\"labelOrder\"\n      >\n        DESCENDENTE\n        <input\n          data-testid=\"column-sort-input-desc\"\n          type=\"radio\"\n          value=\"DESC\"\n          id=\"descendente\"\n          name=\"radio-order\"\n          onChange={ handleChange }\n          className=\"radio-order\"\n        />\n      </label>\n      <button\n        type=\"button\"\n        data-testid=\"column-sort-button\"\n        onClick={ handleClick }\n        className=\"btn-filter\"\n      >\n        ordenar\n\n      </button>\n    </section>\n  );\n};\n\nexport default OrderData;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useContext, useEffect } from 'react';\nimport ContextPlanets from '../context/ContextPlanets';\n\nconst UlFilter = () => {\n  const { filter, setFilters, setFilterColumns,\n    filterColums, data, setPlanetFiltered } = useContext(ContextPlanets);\n  const { filters: { filterByName: { name }, filterByNumericValues } } = filter;\n\n  const handleClick = (obj) => {\n    const filterObj = filterByNumericValues\n      .filter((filterOption) => filterOption.column !== obj.column);\n    setFilterColumns(filterColums.concat(obj.column));\n    setFilters({ filters: { filterByName: { name },\n      filterByNumericValues: filterObj } });\n  };\n\n  useEffect(() => {\n    if (filterByNumericValues.length === 0) setPlanetFiltered(data);\n  }, [filterByNumericValues]);\n\n  return (\n    <ul>\n      { filterByNumericValues.map((filterData, index) => (\n        <li\n          key={ index }\n          data-testid=\"filter\"\n        >\n          { filterData.column }\n          { ' ' }\n          { filterData.comparison }\n          { ' ' }\n          { filterData.value }\n          { ' ' }\n          <button\n            type=\"button\"\n            onClick={ () => handleClick(filterData) }\n          >\n            X\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default UlFilter;\n","import React, { useContext } from 'react';\nimport ContextPlanets from '../context/ContextPlanets';\nimport { optionsComparison } from '../helper/helper';\nimport OrderData from './OrderData';\nimport UlFilter from './UlFilter';\n\nconst Filter = () => {\n  const { getFilterNumeric, column, comparison,\n    setComparison, setColumn, filterComparison,\n    setValue, value, filterColums, setFilterColumns } = useContext(ContextPlanets);\n\n  const handleColumn = ({ target }) => {\n    setColumn(target.value);\n  };\n\n  const handleComparison = ({ target }) => {\n    setComparison(target.value);\n  };\n\n  const handleInput = ({ target }) => {\n    setValue(target.value);\n  };\n\n  const resetState = () => {\n    setColumn('');\n    setComparison('');\n    setValue('0');\n  };\n\n  const handleClick = () => {\n    getFilterNumeric();\n    const filteredColums = filterColums\n      .filter((option) => option !== column);\n    filterComparison();\n    setFilterColumns(filteredColums);\n    resetState();\n  };\n\n  return (\n    <>\n      <section className=\"section-filter\">\n        <select\n          data-testid=\"column-filter\"\n          onChange={ handleColumn }\n          value={ column }\n          className=\"select-filter\"\n        >\n          { filterColums.map((option, index) => (\n            <option key={ index }>{ option }</option>\n          ))}\n        </select>\n        <select\n          data-testid=\"comparison-filter\"\n          onChange={ handleComparison }\n          value={ comparison }\n          className=\"select-filter\"\n        >\n          {optionsComparison.map((option, index) => (\n            <option key={ index }>{ option }</option>\n          ))}\n        </select>\n        <input\n          type=\"number\"\n          data-testid=\"value-filter\"\n          onChange={ handleInput }\n          value={ value }\n          className=\"input-select-filter\"\n        />\n        <button\n          type=\"button\"\n          data-testid=\"button-filter\"\n          onClick={ handleClick }\n          className=\"btn-filter\"\n        >\n          Filtrar\n        </button>\n        <OrderData />\n      </section>\n      <section>\n        <UlFilter />\n      </section>\n    </>\n  );\n};\n\nexport default Filter;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useContext, useEffect } from 'react';\nimport ContextPlanets from '../context/ContextPlanets';\n\nconst Header = () => {\n  const { filter, getPlanetName, data, setPlanetFiltered } = useContext(ContextPlanets);\n  const { filters: { filterByName: { name } } } = filter;\n\n  const handleChange = ({ target }) => {\n    getPlanetName(target.value);\n  };\n\n  useEffect(() => {\n    const dataFilter = data\n      .filter((planet) => planet.name.toLowerCase()\n        .includes(name.toLowerCase()));\n    setPlanetFiltered(dataFilter);\n  }, [name]);\n\n  return (\n    <header>\n      <h1>Projeto Trybe Wars </h1>\n      <input\n        type=\"text\"\n        onChange={ handleChange }\n        value={ name }\n        data-testid=\"name-filter\"\n        className=\"input-filter\"\n        placeholder=\"Pesquise um nome de Planeta\"\n      />\n    </header>\n  );\n};\n\nexport default Header;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useContext } from 'react';\nimport ContextPlanets from '../context/ContextPlanets';\nimport Filter from './Filter';\nimport Header from './Header';\n\nconst Table = () => {\n  const { getDataApi, planetFiltered } = useContext(ContextPlanets);\n  const dataKeys = planetFiltered.length > 0\n  && Object.keys(planetFiltered[0]);\n  const titles = planetFiltered.length > 0\n  && dataKeys.filter((title) => title !== 'residents');\n\n  useEffect(() => {\n    getDataApi();\n  }, []);\n\n  return (\n    <>\n      <Header />\n      <Filter />\n      <table>\n        <thead>\n          <tr>\n            { planetFiltered.length > 0 && titles.map((title, index) => (\n              <th key={ index }>{title}</th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          { planetFiltered.map((planet, index) => {\n            const { name, rotation_period: rotation, orbital_period: orbital,\n              diameter, climate, gravity, terrain, surface_water: surface, population,\n              films, created, edited, url } = planet;\n            return (\n              <tr key={ index }>\n                <td data-testid=\"planet-name\">{ name }</td>\n                <td>{ rotation }</td>\n                <td>{ orbital }</td>\n                <td>{ diameter }</td>\n                <td>{ climate }</td>\n                <td>{ gravity }</td>\n                <td>{ terrain }</td>\n                <td>{ surface }</td>\n                <td>{ population }</td>\n                <td>{JSON.stringify(films)}</td>\n                <td>{ created }</td>\n                <td>{ edited }</td>\n                <td>{ url }</td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </>\n  );\n};\n\nexport default Table;\n","const fetchApi = async () => {\n  const url = 'https://swapi-trybe.herokuapp.com/api/planets/';\n  const fetchDataApi = await fetch(url);\n  const responseJson = await fetchDataApi.json();\n  const resultsJson = responseJson.results;\n  return resultsJson.sort((a, b) => {\n    if (a.name < b.name) {\n      const negative = -1;\n      return negative;\n    }\n    return true;\n  });\n};\n\nexport default fetchApi;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState } from 'react';\nimport Proptypes from 'prop-types';\nimport ContextPlanets from './ContextPlanets';\nimport fetchApi from '../services/serviceApi';\nimport optionsCollum from '../helper/helper';\n\nconst Provider = ({ children }) => {\n  const [data, setData] = useState([]);\n  const [column, setColumn] = useState('');\n  const [comparison, setComparison] = useState('');\n  const [value, setValue] = useState('0');\n  const [planetFiltered, setPlanetFiltered] = useState([]);\n  const [filterColums, setFilterColumns] = useState(optionsCollum);\n  const [orderFilter, setOrder] = useState('ASC');\n  const [option, setOption] = useState('');\n  const [filter, setFilters] = useState({\n    filters: {\n      filterByName: { name: '' },\n      filterByNumericValues: [],\n      order: {\n        column: 'name',\n        sort: 'ASC',\n      },\n    } });\n  const { filters: { filterByName, filterByNumericValues, order } } = filter;\n  const { name } = filterByName;\n\n  const getDataApi = async () => {\n    setData(await fetchApi());\n    setPlanetFiltered(await fetchApi());\n  };\n\n  const getPlanetName = (inputName) => {\n    setFilters({ filters: { filterByName: { name: inputName },\n      filterByNumericValues,\n      order } });\n  };\n\n  const getFilterNumeric = () => {\n    setFilters({ filters: { filterByName: { name },\n      filterByNumericValues: [...filterByNumericValues,\n        { column, comparison, value }],\n      order } });\n  };\n\n  const getFilterOrder = () => {\n    setFilters({ filters: { filterByName,\n      filterByNumericValues,\n      order: { column: option, sort: orderFilter } } });\n  };\n\n  const filterComparison = () => {\n    if (comparison === 'maior que') {\n      const dataFilter = data\n        .filter((planet) => Number(planet[column]) > Number(value));\n      setPlanetFiltered(dataFilter);\n    }\n    if (comparison === 'menor que') {\n      const dataFilter = data\n        .filter((planet) => Number(planet[column]) < Number(value));\n      setPlanetFiltered(dataFilter);\n    }\n\n    if (comparison === 'igual a') {\n      const dataFilter = data\n        .filter((planet) => Number(planet[column]) === Number(value));\n      setPlanetFiltered(dataFilter);\n    }\n  };\n\n  const contextValue = {\n    data,\n    getDataApi,\n    setData,\n    filter,\n    getPlanetName,\n    getFilterNumeric,\n    filterComparison,\n    setColumn,\n    setComparison,\n    setValue,\n    setFilters,\n    value,\n    column,\n    comparison,\n    filterColums,\n    setFilterColumns,\n    planetFiltered,\n    setPlanetFiltered,\n    orderFilter,\n    setOrder,\n    option,\n    setOption,\n    getFilterOrder,\n  };\n\n  return (\n    <ContextPlanets.Provider value={ contextValue }>\n      { children }\n    </ContextPlanets.Provider>\n  );\n};\n\nProvider.propTypes = {\n  children: Proptypes.node.isRequired,\n};\n\nexport default Provider;\n","import React from 'react';\nimport './App.css';\nimport Table from './components/Table';\nimport Provider from './context/Provider';\n\nfunction App() {\n  return (\n    <Provider>\n      <Table />\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}